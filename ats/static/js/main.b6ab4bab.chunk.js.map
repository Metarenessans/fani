{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/DonutChart.js","components/FreeFundsSector.js","components/RiskProfitSector.js","components/CorellatedSector.js","components/RnsSector.js","components/FuturesLoadingSector.js","components/SharesLoadingSector.js","components/MainContent.js","App.js","index.js"],"names":["state","action","type","activeView","payload","initialState","investorInfo","deposit","status","skill","error","loading","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","value","a","err","response","data","Provider","setActiveView","DonutChart","useContext","useState","series","chartOptions","theme","monochrome","enabled","color","shadeTo","shadeIntensity","labels","chart","animations","speed","events","animationEnd","chartContext","config","toggleDataPointSelection","dataPointSelection","event","dataPointIndex","responsive","breakpoint","options","width","dataLabels","formatter","seriesIndex","w","plotOptions","pie","startAngle","endAngle","expandOnClick","donut","size","show","name","offsetY","total","showAlways","label","fontSize","fontWeight","tooltip","legend","chartData","className","FreeFundsSector","TabPane","Tabs","dataSource","key","loadPercent","steps","output","columns","title","dataIndex","callback","console","log","RiskProfitSector","defaultActiveKey","onChange","tab","CorellatedSector","RnsSector","FuturesLoadingSector","SharesLoadingSector","MainContent","antIcon","LoadingOutlined","spin","Loader","indicator","Content","App","ReactDOM","render","document","getElementById"],"mappings":"4MAAe,WAACA,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,2BACFF,GADL,IAEEG,WAAYF,EAAOG,UAEvB,QACE,OAAOJ,I,OCJPK,EAAe,CACnBF,WAAY,EACZG,aAAc,CAAEC,QAAS,KAASC,OAAQ,OAAQC,MAAO,aACzDC,MAAO,KACPC,SAAS,GAGEC,EAAgBC,wBAAcR,GAE9BS,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYZ,GADH,mBACvCL,EADuC,KAChCkB,EADgC,iDAI9C,WAA6BC,GAA7B,SAAAC,EAAA,sDACE,IACEF,EAAS,CACPhB,KAAM,kBACNE,QAASe,IAEX,MAAOE,GACPH,EAAS,CACPhB,KAAM,eACNE,QAASiB,EAAIC,SAASC,KAAKb,QATjC,4CAJ8C,sBAkB9C,OACE,cAACE,EAAcY,SAAf,CACEL,MAAO,CACLhB,WAAYH,EAAMG,WAClBG,aAAcN,EAAMM,aACpBI,MAAOV,EAAMU,MACbC,QAASX,EAAMW,QAEfc,cA1BwC,6CAmB5C,SAUGV,K,kBCrCMW,EAAa,WAAO,IAAD,EACQC,qBAAWf,GAAzCT,EADsB,EACtBA,WAAYsB,EADU,EACVA,cADU,EAGIG,mBAAS,CACzCC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,aAAc,CACZC,MAAO,CACLC,WAAY,CACVC,SAAS,EACTC,MAAO,UACPC,QAAS,QACTC,eAAgB,KAGpBC,OAAQ,CACN,sGACA,CAAC,8FAAoB,uEACrB,uGACA,uBACA,yHACA,wGAEFC,MAAO,CACLC,WAAY,CACVC,MAAO,GAETC,OAAQ,CACNC,aAAc,SAAUC,EAAcC,GACpCD,EAAaE,yBAAyB1C,IAExC2C,mBAAoB,SAACC,EAAOJ,EAAcC,GACxCnB,EAAcmB,EAAOI,mBAI3BC,WAAY,CACV,CACEC,WAAY,IACZC,QAAS,CACPb,MAAO,CACLc,MAAO,WAKfC,WAAY,CACVC,UAAW,SAAUnC,EAAV,GAAsC,IAAnBoC,EAAkB,EAAlBA,YAC5B,OAD8C,EAALC,EAChCZ,OAAOP,OAAOkB,KAG3BE,YAAa,CACXC,IAAK,CACHC,WAAY,GACZC,SAAU,IACVC,eAAe,EACfC,MAAO,CACLC,KAAM,MACN1B,OAAQ,CACN2B,MAAM,EACNC,KAAM,CACJC,QAAS,GAEX/C,MAAO,CACL6C,MAAM,GAERG,MAAO,CACLH,MAAM,EACNI,YAAY,EACZC,MAAO,qBACPC,SAAU,OACVC,WAAY,YAMtBC,QAAS,CACPvC,SAAS,GAEXwC,OAAQ,CACNT,MAAM,MAhFkB,mBAGvBU,EAHuB,UAqF9B,OACE,yBAASC,UAAU,QAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CACExB,QAASuB,EAAU5C,aACnBD,OAAQ6C,EAAU7C,OAClB3B,KAAK,QACLkD,MAAM,a,iBC/FHwB,EAAkB,WAC7B,OACE,qBAAKD,UAAU,YAAf,SACE,iL,kBCFEE,EAAYC,IAAZD,QAEFE,EAAa,CACjB,CACEC,IAAK,IACLC,YAAa,EACbC,MAAO,EACPC,OAAQ,GAEV,CACEH,IAAK,IACLC,YAAa,EACbC,MAAO,EACPC,OAAQ,IAINC,EAAU,CACd,CACEC,MAAO,2DACPC,UAAW,cACXN,IAAK,eAEP,CACEK,MAAO,2FACPC,UAAW,QACXN,IAAK,SAEP,CACEK,MAAO,4FACPC,UAAW,SACXN,IAAK,WAIT,SAASO,EAASP,GAChBQ,QAAQC,IAAIT,GAGP,IAAMU,EAAmB,WAC9B,OACE,sBAAKf,UAAU,YAAf,UACE,6NACA,eAAC,IAAD,CAAMgB,iBAAiB,IAAIC,SAAUL,EAArC,UACE,cAACV,EAAD,CAASgB,IAAI,4EAAb,SACE,cAAC,IAAD,CAAOd,WAAYA,EAAYK,QAASA,KADT,KAGjC,cAACP,EAAD,CAASgB,IAAI,qBAAb,+BAAuB,KAGvB,cAAChB,EAAD,CAASgB,IAAI,+FAAb,yGAAqC,YCnDhCC,EAAmB,WAC9B,OACE,qBAAKnB,UAAU,YAAf,SACE,2NCHOoB,EAAY,WACvB,OACE,qBAAKpB,UAAU,YAAf,SACE,kGCHOqB,EAAuB,WAClC,OACE,qBAAKrB,UAAU,YAAf,SACE,oMCHOsB,EAAsB,WACjC,OACE,qBAAKtB,UAAU,YAAf,SACE,kLCQOuB,EAAc,WAAO,IAAD,EACCvE,qBAAWf,GAAnCT,EADuB,EACvBA,WAAYQ,EADW,EACXA,QAEdwF,EAAU,cAACC,EAAA,EAAD,CAAiBC,MAAI,IAE/BC,EAAS,WACb,OACE,qBAAK3B,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAM4B,UAAWJ,IADnB,2KAQAK,EAAU,WACd,OAAQrG,GACN,KAAK,EACH,OAAO,cAAC,EAAD,IACT,KAAK,EACH,OAAO,cAAC,EAAD,IACT,KAAK,EACH,OAAO,cAAC,EAAD,IACT,KAAK,EACH,OAAO,cAAC,EAAD,IACT,KAAK,EACH,OAAO,cAAC,EAAD,IACT,KAAK,EACH,OAAO,cAAC,EAAD,IACT,QACE,OAAO,cAAC,EAAD,MAIb,OACE,yBAASwE,UAAU,eAAnB,SACGhE,EAAU,cAAC2F,EAAD,IAAa,cAACE,EAAD,O,cClCfC,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCPNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b6ab4bab.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ACTIVE_VIEW\":\r\n      return {\r\n        ...state,\r\n        activeView: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n// import axios from \"axios\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  activeView: 1,\r\n  investorInfo: { deposit: 1500000, status: \"KSUR\", skill: \"UNSKILLED\" },\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  async function setActiveView(value) {\r\n    try {\r\n      dispatch({\r\n        type: \"SET_ACTIVE_VIEW\",\r\n        payload: value,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"FUTURE_ERROR\",\r\n        payload: err.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        activeView: state.activeView,\r\n        investorInfo: state.investorInfo,\r\n        error: state.error,\r\n        loading: state.loading,\r\n\r\n        setActiveView,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport const DonutChart = () => {\r\n  const { activeView, setActiveView } = useContext(GlobalContext);\r\n\r\n  const [chartData, setChartData] = useState({\r\n    series: [1, 1, 1, 1, 1, 1],\r\n    chartOptions: {\r\n      theme: {\r\n        monochrome: {\r\n          enabled: true,\r\n          color: \"#255aee\",\r\n          shadeTo: \"light\",\r\n          shadeIntensity: 0.9,\r\n        },\r\n      },\r\n      labels: [\r\n        \"% свободных средств\",\r\n        [\"Дневной норматив\", \"Риск/Прибыль\"],\r\n        \"% скореллир. позиций\",\r\n        \"% РНС\",\r\n        \"% загрузки по фьючерсам\",\r\n        \"% загрузки по акциям\",\r\n      ],\r\n      chart: {\r\n        animations: {\r\n          speed: 0,\r\n        },\r\n        events: {\r\n          animationEnd: function (chartContext, config) {\r\n            chartContext.toggleDataPointSelection(activeView);\r\n          },\r\n          dataPointSelection: (event, chartContext, config) => {\r\n            setActiveView(config.dataPointIndex);\r\n          },\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 768,\r\n          options: {\r\n            chart: {\r\n              width: \"100%\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      dataLabels: {\r\n        formatter: function (value, { seriesIndex, w }) {\r\n          return w.config.labels[seriesIndex];\r\n        },\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          startAngle: 90,\r\n          endAngle: 450,\r\n          expandOnClick: false,\r\n          donut: {\r\n            size: \"25%\",\r\n            labels: {\r\n              show: true,\r\n              name: {\r\n                offsetY: 5,\r\n              },\r\n              value: {\r\n                show: false,\r\n              },\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                label: \"АТС\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"donut\">\r\n      <div className=\"container\">\r\n        <Chart\r\n          options={chartData.chartOptions}\r\n          series={chartData.series}\r\n          type=\"donut\"\r\n          width=\"750\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const FreeFundsSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Процент свободных средств</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Table, Tabs } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst dataSource = [\r\n  {\r\n    key: \"1\",\r\n    loadPercent: 1,\r\n    steps: 2,\r\n    output: 3,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    loadPercent: 4,\r\n    steps: 5,\r\n    output: 6,\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"% разгрузки\",\r\n    dataIndex: \"loadPercent\",\r\n    key: \"loadPercent\",\r\n  },\r\n  {\r\n    title: \"% догрузки и этапы\",\r\n    dataIndex: \"steps\",\r\n    key: \"steps\",\r\n  },\r\n  {\r\n    title: \"Выход: КОД + уровни\",\r\n    dataIndex: \"output\",\r\n    key: \"output\",\r\n  },\r\n];\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nexport const RiskProfitSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Дневной норматив Риск / Прибыль: КРАБ</h2>\r\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n        <TabPane tab=\"Акции Америка\" key=\"1\">\r\n          <Table dataSource={dataSource} columns={columns} />\r\n        </TabPane>\r\n        <TabPane tab=\"ОФЗ\" key=\"2\">\r\n          ОФЗ\r\n        </TabPane>\r\n        <TabPane tab=\"Акции Россия лонг\" key=\"3\">\r\n          Акции Россия лонг\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CorellatedSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Процент скореллированных позиций</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const RnsSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Процент РНС</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const FuturesLoadingSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Процент загрузки по фьючерсам</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const SharesLoadingSector = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Процент загрузки по акциям</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport { FreeFundsSector } from \"./FreeFundsSector\";\r\nimport { RiskProfitSector } from \"./RiskProfitSector\";\r\nimport { CorellatedSector } from \"./CorellatedSector\";\r\nimport { RnsSector } from \"./RnsSector\";\r\nimport { FuturesLoadingSector } from \"./FuturesLoadingSector\";\r\nimport { SharesLoadingSector } from \"./SharesLoadingSector\";\r\n\r\nexport const MainContent = () => {\r\n  const { activeView, loading } = useContext(GlobalContext);\r\n\r\n  const antIcon = <LoadingOutlined spin />;\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"load-tables_spin\">\r\n          <Spin indicator={antIcon} />\r\n          Подождите, данные загружаются...\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Content = () => {\r\n    switch (activeView) {\r\n      case 0:\r\n        return <FreeFundsSector />;\r\n      case 1:\r\n        return <RiskProfitSector />;\r\n      case 2:\r\n        return <CorellatedSector />;\r\n      case 3:\r\n        return <RnsSector />;\r\n      case 4:\r\n        return <CorellatedSector />;\r\n      case 5:\r\n        return <FuturesLoadingSector />;\r\n      default:\r\n        return <SharesLoadingSector />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"main-content\">\r\n      {loading ? <Loader /> : <Content />}\r\n    </section>\r\n  );\r\n};\r\n","import { DonutChart } from \"./components/DonutChart\";\r\nimport { MainContent } from \"./components/MainContent\";\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <DonutChart />\r\n      <MainContent />\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}